apiVersion: redhatcop.redhat.io/v1alpha1
kind: Patch
metadata:
  name: config-patches
  namespace: openshift-config
  labels:
    {{- include "openshift-config.labels" . | nindent 4 }}  
spec:
  serviceAccountRef:
    name: default
  patches:
    pull-secret-service-account-patch:
      targetObjectRef:
        apiVersion: v1
        kind: ServiceAccount
        name: default 
      sourceObjectRefs:
      - apiVersion: v1
        kind: Namespace
        name: '{{ "{{" }} .metadata.namespace {{ "}}" }}'   
      patchTemplate: |
        imagePullSecrets:
        {{ "{{-" }} if and (and (hasKey (index . 1).metadata.labels "app") (not (eq ((index . 1).metadata.labels.environment | toString) "build"))) (not (has (dict "name" "quay-pull-secret") (index . 0).imagePullSecrets)) {{ "}}" }}      
        {{ "{{" }} append (index . 0).imagePullSecrets (dict "name" "quay-pull-secret") | toYaml | indent 2 {{ "}}" }}
        {{ "{{-" }} else {{ "}}" }}
        {{ "{{" }} (index . 0).imagePullSecrets | toYaml | indent 2 {{ "}}" }}
        {{ "{{-" }} end {{ "}}" }}
      patchType: application/merge-patch+json  
    push-secret-pipeline-service-account-patch:
      targetObjectRef:
        apiVersion: v1
        kind: ServiceAccount
        name: pipeline
      sourceObjectRefs:
      - apiVersion: v1
        kind: Namespace
        name: '{{ "{{" }} .metadata.namespace {{ "}}" }}'   
      patchTemplate: |
        imagePullSecrets:
        {{ "{{-" }} if and (and (hasKey (index . 1).metadata.labels "app") (eq ((index . 1).metadata.labels.environment | toString) "build")) (not (has (dict "name" "quay-push-secret") (index . 0).imagePullSecrets)) {{ "}}" }}      
        {{ "{{" }} append (index . 0).imagePullSecrets (dict "name" "quay-push-secret") | toYaml | indent 2 {{ "}}" }}
        {{ "{{-" }} else {{ "}}" }}
        {{ "{{" }} (index . 0).imagePullSecrets | toYaml | indent 2 {{ "}}" }}
        {{ "{{-" }} end {{ "}}" }}                
      patchType: application/merge-patch+json     
    github-ocp-oauth-provider:
      targetObjectRef:
        apiVersion: config.openshift.io/v1
        kind: OAuth
        name: cluster
      sourceObjectRefs:
      - apiVersion: v1
        kind: Secret
        name: ocp-github-app-credentials
        namespace: openshift-config  
      - apiVersion: v1
        kind: Secret
        namespace: backstage
        name: github-credentials        
      patchTemplate: |
        {{ "{{-" }} $backStageDemoIDP:= dict "name" "backstage-demo-github" "mappingMethod" "claim" "type" "GitHub" "github" (dict "teams" (list) "clientID" ((index . 1).data.client_id | b64dec) "clientSecret" (dict "name" "ocp-github-app-credentials") "organizations" (list ((index . 2).data.GITHUB_ORG | b64dec)) ) {{ "-}}" }}
        spec:
          identityProviders:
          {{ "{{-" }} if (not (has $backStageDemoIDP (index . 0).spec.identityProviders)) {{ "}}" }}
        {{ "{{" }} append (index . 0).spec.identityProviders $backStageDemoIDP | toYaml | indent 4 {{ "}}" }}
          {{ "{{-" }} else {{ "}}" }}
        {{ "{{" }} (index . 0).spec.identityProviders | toYaml | indent 4 {{ "}}" }}
          {{ "{{-" }} end {{ "}}" }}            
      patchType: application/merge-patch+json
    argocd-admin-user-secret-for-tekton:
      targetObjectRef:
        apiVersion: v1
        kind: Secret
        name: argocd-env-secret
      sourceObjectRefs:
      - apiVersion: v1
        kind: Secret
        namespace: '{{ "{{" }} .metadata.namespace {{ "}}" }}'
        name: tenant-gitops-cluster
      patchTemplate: | 
        data:
          ARGOCD_USERNAME: {{ "{{" }} "admin" | b64enc {{ "}}" }}
          ARGOCD_PASSWORD: {{ "{{" }} (index (index . 1).data "admin.password") {{ "}}" }}
      patchType: application/merge-patch+json         
    user-workload-grafana-app-patch:
      targetObjectRef:
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        namespace: openshift-gitops
        name: user-workload-grafana
      sourceObjectRefs:
      - apiVersion: v1
        kind: Secret
        namespace: openshift-config
        name: default-service-account        
      patchTemplate: |
        spec:
          source:
            helm:
              values: |
                userworkload:
                  prometheus:
                    bearertoken: {{ "{{" }} (index . 1).data.token | toString | b64dec {{ "}}" }}
      patchType: application/merge-patch+json
    patch-operator-mutatingwebhookconfigurations:
      targetObjectRef:
        apiVersion: admissionregistration.k8s.io/v1
        kind: MutatingWebhookConfiguration
        name: patch-operator-inject
      patchTemplate: '[{"op": "replace", "path": "/webhooks/0/clientConfig/caBundle", "value":"{{ "{{" }} (index (index . 1).data "olmCAKey") {{ "}}" }}"}]'     
      patchType: application/json-patch+json
      sourceObjectRefs:
      - apiVersion: v1
        kind: Secret
        name: patch-operator-controller-manager-service-cert
        namespace: patch-operator